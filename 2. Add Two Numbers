# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        head = None;
        previous = None;
        a = 0;
        
        while (l1 is not None or l2 is not None or a > 0):
            # Check l1, l2 is not null and add up values.
            value = a;
            if (l1 is not None):
                value += l1.val;
            if (l2 is not None):
                value += l2.val;
            
            a = value / 10;
            result = ListNode(value % 10);
            if (head is None):
                head = result
                previous = result
            else:
                previous.next = result;
                previous = result;
                
            # Move to the next nodes.
            if (l1 is not None):
                l1 = l1.next;
            if (l2 is not None):
                l2 = l2.next;
        
        return head
